version: '3'
services:
  #---DATABASE----------------------------
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password
  #---IN-MEMORY DATA STORE----------------
  redis:
    image: 'redis:latest'
  #---ROUTER------------------------------
  nginx:
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '3050:80'
  #---SERVER------------------------------
  api:
    depends_on:
      - postgres
    build:
      dockerfile: Dockerfile.dev
      context: ./server
    volumes:
      #don't override or redirect access to node_modules
      - /app/node_modules
      #map the server directory on local FS to app dir in container
      - ./server:/app
    environment:
      - REDIS_HOST=redis
      #find the redis port from docs
      - REDIS_PORT=6379
      - PGUSER=postgres
      #hostname is service name
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
  #---FRONT-END--------------------------
  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      #hold node_modules and do not override
      - /app/node_modules
      - ./client:/app
  #---WORKER-----------------------------
  worker:
    environment:
      - REDIS_HOST=redis
          #find the redis port from docs
      - REDIS_PORT=6379
      - PGUSER=postgres
          #hostname is service name
      - PGHOST=postgres
      - PGDATABASE= postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app


#variableName=value sets a variable in the container at run time
#variableName sets a variable in the container at run time but the value is taken from your computer
